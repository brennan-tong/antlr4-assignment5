prog
 programDeclaration
  program
  SampleProgram
  ;
 declaration
  constDeclaration
   const
   constAssignmentList
    PI
    =
    constExpression
     simpleExpression
      term
       factor
        number
         3.14159
    ;
    E
    =
    constExpression
     simpleExpression
      term
       factor
        number
         2.718
    ;
    GREETING
    =
    constExpression
     simpleExpression
      term
       factor
        stringConstant
         'Hello, world!'
    ;
 declaration
  typeDefDeclaration
   type
   typeDefList
    typeDefElement
     TInteger
     =
     typeSpecification
      simpleType
       Integer
     ;
    typeDefElement
     TReal
     =
     typeSpecification
      simpleType
       Real
     ;
    typeDefElement
     TBoolean
     =
     typeSpecification
      simpleType
       Boolean
     ;
    typeDefElement
     TIntegerArray
     =
     typeSpecification
      array
      [
      subrange
       expression
        simpleExpression
         term
          factor
           number
            1
       ..
       expression
        simpleExpression
         term
          factor
           number
            10
      ]
      of
      typeIdentifier
       TInteger
     ;
    typeDefElement
     TMatrix
     =
     typeSpecification
      array
      [
      subrange
       expression
        simpleExpression
         term
          factor
           number
            1
       ..
       expression
        simpleExpression
         term
          factor
           number
            3
      ,
      subrange
       expression
        simpleExpression
         term
          factor
           number
            1
       ..
       expression
        simpleExpression
         term
          factor
           number
            3
      ]
      of
      typeIdentifier
       TReal
     ;
    typeDefElement
     TArrayOfArrays
     =
     typeSpecification
      array
      [
      subrange
       expression
        simpleExpression
         term
          factor
           number
            1
       ..
       expression
        simpleExpression
         term
          factor
           number
            2
      ]
      of
      typeIdentifier
       TIntegerArray
     ;
 declaration
  varDeclaration
   var
   varDeclarationList
    varIdentifierList
     x
    :
    typeIdentifier
     TInteger
    ;
   varDeclarationList
    varIdentifierList
     y
    :
    typeIdentifier
     TReal
    ;
   varDeclarationList
    varIdentifierList
     isTrue
    :
    typeIdentifier
     TBoolean
    ;
   varDeclarationList
    varIdentifierList
     intArray
    :
    typeIdentifier
     TIntegerArray
    ;
   varDeclarationList
    varIdentifierList
     matrix
    :
    typeIdentifier
     TMatrix
    ;
   varDeclarationList
    varIdentifierList
     arrayOfArrays
    :
    typeIdentifier
     TArrayOfArrays
    ;
 declaration
  functionDeclaration
   function
   Add
   (
   paramDeclaration
    paramIdentifierList
     a
     ,
     b
    :
    typeIdentifier
     TInteger
   )
   :
   typeIdentifier
    TInteger
   ;
   begin
   statement
    assignment
     variable
      Add
     :=
     expression
      simpleExpression
       term
        factor
         variable
          a
       +
       term
        factor
         variable
          b
     ;
   end
   ;
 declaration
  functionDeclaration
   function
   Subtract
   (
   paramDeclaration
    paramIdentifierList
     a
     ,
     b
    :
    typeIdentifier
     TInteger
   )
   :
   typeIdentifier
    TInteger
   ;
   begin
   statement
    assignment
     variable
      Subtract
     :=
     expression
      simpleExpression
       term
        factor
         variable
          a
       -
       term
        factor
         variable
          b
     ;
   end
   ;
 declaration
  functionDeclaration
   function
   Multiply
   (
   paramDeclaration
    paramIdentifierList
     a
     ,
     b
    :
    typeIdentifier
     TInteger
   )
   :
   typeIdentifier
    TInteger
   ;
   begin
   statement
    assignment
     variable
      Multiply
     :=
     expression
      simpleExpression
       term
        factor
         variable
          a
        *
        factor
         variable
          b
     ;
   end
   ;
 declaration
  functionDeclaration
   function
   Divide
   (
   paramDeclaration
    paramIdentifierList
     a
     ,
     b
    :
    typeIdentifier
     TInteger
   )
   :
   typeIdentifier
    TReal
   ;
   begin
   statement
    ifStatement
     if
     expression
      simpleExpression
       term
        factor
         variable
          b
      <>
      simpleExpression
       term
        factor
         number
          0
     then
     statement_or_comment
      statement_without_semicolon
       assignment_without_semicolon
        variable
         Divide
        :=
        expression
         simpleExpression
          term
           factor
            variable
             a
           /
           factor
            variable
             b
     else
     statement_or_comment
      statement
       assignment
        variable
         Divide
        :=
        expression
         simpleExpression
          term
           factor
            number
             0
        ;
   end
   ;
 begin
 statement
  assignment
   variable
    x
   :=
   expression
    simpleExpression
     term
      factor
       number
        5
   ;
 statement
  assignment
   variable
    y
   :=
   expression
    simpleExpression
     term
      factor
       number
        3.14
   ;
 statement
  assignment
   variable
    isTrue
   :=
   expression
    simpleExpression
     term
      factor
       True
   ;
 statement
  assignment
   arrayIndexing
    variable
     intArray
    [
    expression
     simpleExpression
      term
       factor
        number
         1
    ]
   :=
   expression
    simpleExpression
     term
      factor
       number
        42
   ;
 statement
  assignment
   arrayIndexing
    variable
     matrix
    [
    expression
     simpleExpression
      term
       factor
        number
         1
    ,
    expression
     simpleExpression
      term
       factor
        number
         1
    ]
   :=
   expression
    simpleExpression
     term
      factor
       number
        1.0
   ;
 statement
  assignment
   arrayIndexing
    variable
     arrayOfArrays
    [
    expression
     simpleExpression
      term
       factor
        number
         1
    ]
   :=
   expression
    simpleExpression
     term
      factor
       variable
        intArray
   ;
 statement
  writeln
   WriteLn
   (
   expression
    simpleExpression
     term
      factor
       variable
        GREETING
   )
   ;
 statement
  writeln
   WriteLn
   (
   expression
    simpleExpression
     term
      factor
       stringConstant
        'Add: '
   ,
   expression
    simpleExpression
     term
      factor
       functionCall
        Add
        (
        expression
         simpleExpression
          term
           factor
            variable
             x
        ,
        expression
         simpleExpression
          term
           factor
            number
             7
        )
   )
   ;
 statement
  writeln
   WriteLn
   (
   expression
    simpleExpression
     term
      factor
       stringConstant
        'Subtract: '
   ,
   expression
    simpleExpression
     term
      factor
       functionCall
        Subtract
        (
        expression
         simpleExpression
          term
           factor
            variable
             x
        ,
        expression
         simpleExpression
          term
           factor
            number
             3
        )
   )
   ;
 statement
  writeln
   WriteLn
   (
   expression
    simpleExpression
     term
      factor
       stringConstant
        'Multiply: '
   ,
   expression
    simpleExpression
     term
      factor
       functionCall
        Multiply
        (
        expression
         simpleExpression
          term
           factor
            variable
             x
        ,
        expression
         simpleExpression
          term
           factor
            number
             2
        )
   )
   ;
 statement
  writeln
   WriteLn
   (
   expression
    simpleExpression
     term
      factor
       stringConstant
        'Divide: '
   ,
   expression
    simpleExpression
     term
      factor
       functionCall
        Divide
        (
        expression
         simpleExpression
          term
           factor
            variable
             x
        ,
        expression
         simpleExpression
          term
           factor
            number
             3
        )
   :
   expression
    simpleExpression
     term
      factor
       number
        0
   :
   expression
    simpleExpression
     term
      factor
       number
        2
   )
   ;
 end
 .
 <EOF>
